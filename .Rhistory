library(ggthemes)
d1 <- gapminder %>% filter(continent == "Americas" , year == 1952) %>% mutate(life_1952 = lifeExp)
d2 <- gapminder %>% filter(continent == "Americas" , year == 2007) %>% mutate(life_2007 = lifeExp)
inner_join(d1,d2 , by="country") %>%
mutate(difference = life_2007 - life_1952) %>%
select(difference, country, continent.x) %>%
ggplot(aes(country)) +
geom_bar(aes(weight = difference, fill = difference)) +  theme_bw() +
geom_label(aes(country, difference, label = round(difference,1)), size = 2) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0.5,size = 8), axis.text.y=element_blank(), axis.ticks.y = element_blank(), axis.title.y = element_blank()) +
labs(x = "Country", y = "Years") +
coord_polar() + scale_fill_distiller("Years", palette="Purples", direction=1)
knitr::opts_chunk$set(echo = FALSE)
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
df
df
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(fig.align = "center")
df
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
ggplot(subset(gapminder, year == 1987, continent != "Oceania"), aes(continent, gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
labs(x = "Continent", y = "GDP Per Capita") + theme_bw() +
scale_fill_brewer("Continent", palette = "Set3") + scale_y_continuous(labels = scales::dollar_format())
ggplot(subset(gapminder, year == 1987, continent != "Oceania"), aes(continent, gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
labs(x = "Continent", y = "GDP Per Capita") + theme_bw() +
scale_fill_brewer("Continent", palette = "Set3") + geom_jitter(alpha = 0.3) + scale_y_continuous(labels = scales::dollar_format())
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
world<- map_data("world")
gapminder_df <- gapminder %>% filter(year == 1952) %>%
mutate(code = countrycode::countrycode(country,"country.name", "iso2c"))
world <- world %>%
mutate(code = countrycode::countrycode(region,"country.name", "iso2c"))
df <- left_join(world, gapminder_df, by = "code")
df %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(gapminder))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(RColorBrewer))
knitr::opts_chunk$set(echo=FALSE, fig.align="center", fig.width=4, fig.height=3,
warning=FALSE)
col_pt <- brewer.pal(n=8, name = "Paired")[2]
col_accent <- brewer.pal(n=8, name = "Paired")[6]
col_bg <- brewer.pal(n=8, name = "Paired")[8]
# library(rgl)
# with(gapminder,
#      plot3d(log(gdpPercap), lifeExp, log(pop),
#             alpha=0.3))
# z <- 2 * volcano        # Exaggerate the relief
# x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
# y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
# zlim <- range(y)
# zlen <- zlim[2] - zlim[1] + 1
# colorlut <- terrain.colors(zlen) # height color lookup table
# col <- colorlut[ z - zlim[1] + 1 ] # assign colors to heights for each point
# surface3d(x, y, z, color = col, back = "lines")
suppressPackageStartupMessages(library(ggmap))
install.packages('ggmap')
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(gapminder))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(RColorBrewer))
knitr::opts_chunk$set(echo=FALSE, fig.align="center", fig.width=4, fig.height=3,
warning=FALSE)
col_pt <- brewer.pal(n=8, name = "Paired")[2]
col_accent <- brewer.pal(n=8, name = "Paired")[6]
col_bg <- brewer.pal(n=8, name = "Paired")[8]
# library(rgl)
# with(gapminder,
#      plot3d(log(gdpPercap), lifeExp, log(pop),
#             alpha=0.3))
# z <- 2 * volcano        # Exaggerate the relief
# x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
# y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
# zlim <- range(y)
# zlen <- zlim[2] - zlim[1] + 1
# colorlut <- terrain.colors(zlen) # height color lookup table
# col <- colorlut[ z - zlim[1] + 1 ] # assign colors to heights for each point
# surface3d(x, y, z, color = col, back = "lines")
suppressPackageStartupMessages(library(ggmap))
set.seed(23)
dat <- tibble(x=runif(20)*0.01-123.2525,
y=runif(20)*0.008+49.257)
get_googlemap(center=c(-123.247985, 49.261263), zoom=16) %>%
ggmap(base_layer = ggplot(dat, aes(x,y))) +
geom_point(size=5, colour=col_pt) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
suppressPackageStartupMessages(library(igraph))
install.packages("igraph")
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(gapminder))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(RColorBrewer))
knitr::opts_chunk$set(echo=FALSE, fig.align="center", fig.width=4, fig.height=3,
warning=FALSE)
col_pt <- brewer.pal(n=8, name = "Paired")[2]
col_accent <- brewer.pal(n=8, name = "Paired")[6]
col_bg <- brewer.pal(n=8, name = "Paired")[8]
# library(rgl)
# with(gapminder,
#      plot3d(log(gdpPercap), lifeExp, log(pop),
#             alpha=0.3))
# z <- 2 * volcano        # Exaggerate the relief
# x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
# y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
# zlim <- range(y)
# zlen <- zlim[2] - zlim[1] + 1
# colorlut <- terrain.colors(zlen) # height color lookup table
# col <- colorlut[ z - zlim[1] + 1 ] # assign colors to heights for each point
# surface3d(x, y, z, color = col, back = "lines")
suppressPackageStartupMessages(library(ggmap))
set.seed(23)
dat <- tibble(x=runif(20)*0.01-123.2525,
y=runif(20)*0.008+49.257)
get_googlemap(center=c(-123.247985, 49.261263), zoom=16) %>%
ggmap(base_layer = ggplot(dat, aes(x,y))) +
geom_point(size=5, colour=col_pt) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
suppressPackageStartupMessages(library(igraph))
dat <- make_graph(c("A","B",  "A","C",  "A","D",  "B","C",  "C","B"),
directed=TRUE)
plot(dat)
get.adjacency(dat)
## Not necessary to show zero:
van <- readr::read_csv("lec6_files/van_weather.csv")
van %>%
filter(month(date)>=4, month(date)<=9) %>%
ggplot(aes(month(date, label=TRUE), max_temperature)) +
geom_boxplot(fill=col_pt) +
theme_bw() +
xlab("")
p <- ggplot(tibble(x=c("Pacific Spirit Park", "Stanley Park"),
y=c(100000, 90000)),
aes(x)) +
geom_col(aes(y=y), fill=col_pt) +
ylab("Number of trees")+
xlab("") +
labs(caption="(These numbers are made up)")
p + coord_cartesian(ylim=c(89000,101000))
p
ggplot(van, aes(month(date, label=TRUE), precipitation)) +
geom_boxplot(fill=col_pt) +
scale_y_log10(breaks=10^(-1:2),
limits=c(0.1, NA)) +
theme_bw() +
xlab("")
set.seed(3)
dat <- tibble(x=c(rep(1, 100), rep(2, 10), rep(3, 100)),
y=rnorm(length(x), mean=x, sd=0.4)) %>%
mutate(x=LETTERS[(x %% 2) + 1])
dat %>%
group_by(x) %>%
summarize(mu=mean(y),
se=sd(y)/sqrt(length(y))) %>%
ggplot(aes(x)) +
geom_col(aes(y=mu), fill=col_pt) +
ylab("Average score") +
xlab("") +
theme_bw()
p <- ggplot(dat, aes(x, y)) +
ylab("Scores") +
xlab("") +
theme_bw()
p + geom_boxplot(fill=col_pt)
p + geom_violin(fill=col_pt)
p + geom_boxplot(fill=col_pt) +
geom_jitter(width=0.1)
p + geom_violin(fill=col_pt) +
geom_jitter(width=0.1)
p + geom_violin(fill=col_pt, alpha=0.5) +
geom_boxplot(fill=col_accent, alpha=0.5) +
geom_jitter(width=0.1, alpha=0.5)
## Too many geoms and aesthetics. Tailor to underlying message.
ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point(aes(size=year, colour=log(pop)),
alpha=0.2) +
geom_smooth(aes(group=continent),
colour="red",
method="loess") +
scale_x_log10("GDP per capita", labels=scales::dollar_format()) +
ylab("Life Expectancy") +
theme_bw()
## Why colour by country?
ggplot(gapminder, aes(year, lifeExp)) +
geom_line(aes(group=country, colour=country),
alpha=0.25) +
scale_color_discrete(guide=FALSE) +
theme_bw() +
ylab("Life Expectancy") +
xlab("Year")
iris %>%
filter(Species=="setosa") %>%
select(-Species) %>%
GGally::ggpairs() +
theme_bw()
install.packages("GGally")
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(gapminder))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(RColorBrewer))
knitr::opts_chunk$set(echo=FALSE, fig.align="center", fig.width=4, fig.height=3,
warning=FALSE)
col_pt <- brewer.pal(n=8, name = "Paired")[2]
col_accent <- brewer.pal(n=8, name = "Paired")[6]
col_bg <- brewer.pal(n=8, name = "Paired")[8]
# library(rgl)
# with(gapminder,
#      plot3d(log(gdpPercap), lifeExp, log(pop),
#             alpha=0.3))
# z <- 2 * volcano        # Exaggerate the relief
# x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
# y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
# zlim <- range(y)
# zlen <- zlim[2] - zlim[1] + 1
# colorlut <- terrain.colors(zlen) # height color lookup table
# col <- colorlut[ z - zlim[1] + 1 ] # assign colors to heights for each point
# surface3d(x, y, z, color = col, back = "lines")
suppressPackageStartupMessages(library(ggmap))
set.seed(23)
dat <- tibble(x=runif(20)*0.01-123.2525,
y=runif(20)*0.008+49.257)
get_googlemap(center=c(-123.247985, 49.261263), zoom=16) %>%
ggmap(base_layer = ggplot(dat, aes(x,y))) +
geom_point(size=5, colour=col_pt) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
suppressPackageStartupMessages(library(igraph))
dat <- make_graph(c("A","B",  "A","C",  "A","D",  "B","C",  "C","B"),
directed=TRUE)
plot(dat)
get.adjacency(dat)
## Not necessary to show zero:
van <- readr::read_csv("lec6_files/van_weather.csv")
van %>%
filter(month(date)>=4, month(date)<=9) %>%
ggplot(aes(month(date, label=TRUE), max_temperature)) +
geom_boxplot(fill=col_pt) +
theme_bw() +
xlab("")
p <- ggplot(tibble(x=c("Pacific Spirit Park", "Stanley Park"),
y=c(100000, 90000)),
aes(x)) +
geom_col(aes(y=y), fill=col_pt) +
ylab("Number of trees")+
xlab("") +
labs(caption="(These numbers are made up)")
p + coord_cartesian(ylim=c(89000,101000))
p
ggplot(van, aes(month(date, label=TRUE), precipitation)) +
geom_boxplot(fill=col_pt) +
scale_y_log10(breaks=10^(-1:2),
limits=c(0.1, NA)) +
theme_bw() +
xlab("")
set.seed(3)
dat <- tibble(x=c(rep(1, 100), rep(2, 10), rep(3, 100)),
y=rnorm(length(x), mean=x, sd=0.4)) %>%
mutate(x=LETTERS[(x %% 2) + 1])
dat %>%
group_by(x) %>%
summarize(mu=mean(y),
se=sd(y)/sqrt(length(y))) %>%
ggplot(aes(x)) +
geom_col(aes(y=mu), fill=col_pt) +
ylab("Average score") +
xlab("") +
theme_bw()
p <- ggplot(dat, aes(x, y)) +
ylab("Scores") +
xlab("") +
theme_bw()
p + geom_boxplot(fill=col_pt)
p + geom_violin(fill=col_pt)
p + geom_boxplot(fill=col_pt) +
geom_jitter(width=0.1)
p + geom_violin(fill=col_pt) +
geom_jitter(width=0.1)
p + geom_violin(fill=col_pt, alpha=0.5) +
geom_boxplot(fill=col_accent, alpha=0.5) +
geom_jitter(width=0.1, alpha=0.5)
## Too many geoms and aesthetics. Tailor to underlying message.
ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point(aes(size=year, colour=log(pop)),
alpha=0.2) +
geom_smooth(aes(group=continent),
colour="red",
method="loess") +
scale_x_log10("GDP per capita", labels=scales::dollar_format()) +
ylab("Life Expectancy") +
theme_bw()
## Why colour by country?
ggplot(gapminder, aes(year, lifeExp)) +
geom_line(aes(group=country, colour=country),
alpha=0.25) +
scale_color_discrete(guide=FALSE) +
theme_bw() +
ylab("Life Expectancy") +
xlab("Year")
iris %>%
filter(Species=="setosa") %>%
select(-Species) %>%
GGally::ggpairs() +
theme_bw()
set.seed(238)
## There's positive dependence in the iris data frame:
my_iris <- iris %>%
filter(Species=="setosa") %>%
select(-Species) %>%
mutate(indiv=1:length(Sepal.Width)) %>%
gather(part, dimension, -indiv)
ggplot(my_iris, aes(fct_reorder(part, dimension), dimension)) +
geom_line(aes(group=indiv), alpha=0.1, colour=col_pt) +
geom_jitter(width=0, alpha=0.2) +
xlab("") +
theme_bw()
my_iris %>%
mutate(dec=if_else(grepl("Length", part), TRUE, FALSE)) %>%
group_by(part) %>%
mutate(dimension=sort(dimension, decreasing=unique(dec))) %>%
ggplot(aes(fct_reorder(part, dimension), dimension)) +
geom_line(aes(group=indiv), alpha=0.1, colour=col_pt) +
geom_jitter(width=0, alpha=0.2) +
xlab("") +
ggtitle("Rearranged iris data") +
theme_bw()
get_googlemap(center=c(-123.247985, 49.261263), zoom=16) %>%
ggmap(base_layer = ggplot(dat, aes(x,y))) +
geom_point(size=5, colour=col_pt) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
suppressPackageStartupMessages(library(ggmap))
set.seed(23)
dat <- tibble(x=runif(20)*0.01-123.2525,
y=runif(20)*0.008+49.257)
get_googlemap(center=c(-123.247985, 49.261263), zoom=16) %>%
ggmap(base_layer = ggplot(dat, aes(x,y))) +
geom_point(size=5, colour=col_pt) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
suppressPackageStartupMessages(library(ggmap))
set.seed(23)
dat <- tibble(x=runif(20)*0.01-123.2525,
y=runif(20)*0.008+49.257)
get_googlemap(center=c(-123.247985, 49.261263), zoom=16) %>%
ggmap(base_layer = ggplot(dat, aes(x,y))) +
geom_point(size=5, colour=col_pt) +
theme_bw() +
xlab("Longitude") +
ylab("Latitude")
library(gapminder)
library(tidyverse)
library(forcats)
library(ggthemes)
d1 <- gapminder %>% filter(continent == "Americas" , year == 1952) %>% mutate(life_1952 = lifeExp)
d2 <- gapminder %>% filter(continent == "Americas" , year == 2007) %>% mutate(life_2007 = lifeExp)
inner_join(d1,d2 , by="country") %>%
mutate(difference = life_2007 - life_1952) %>%
select(difference, country, continent.x) %>%
ggplot(aes(country)) +
geom_bar(aes(weight = difference, fill = difference)) +  theme_classic() +
geom_label(aes(country, difference, label = round(difference,1)), size = 2) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0.5,size = 8), axis.text.y=element_blank(), axis.ticks.y = element_blank(), axis.title.y = element_blank()) +
labs(x = "Country", y = "Years") +
coord_polar() + scale_fill_distiller("Years", palette="Purples", direction=1)
library(gapminder)
library(tidyverse)
library(forcats)
library(ggthemes)
d1 <- gapminder %>% filter(continent == "Americas" , year == 1952) %>% mutate(life_1952 = lifeExp)
d2 <- gapminder %>% filter(continent == "Americas" , year == 2007) %>% mutate(life_2007 = lifeExp)
inner_join(d1,d2 , by="country") %>%
mutate(difference = life_2007 - life_1952) %>%
select(difference, country, continent.x) %>%
ggplot(aes(country)) +
geom_bar(aes(weight = difference, fill = difference)) +  theme_minimal() +
geom_label(aes(country, difference, label = round(difference,1)), size = 2) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0.5,size = 8), axis.text.y=element_blank(), axis.ticks.y = element_blank(), axis.title.y = element_blank()) +
labs(x = "Country", y = "Years") +
coord_polar() + scale_fill_distiller("Years", palette="Purples", direction=1)
df1 %>% filter(!is.na(gdpPercap), long < 0, year %in% c(1952, 2007)) %>%  ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
facet_wrap(~year, scales = "free")  +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1,  labels = scales::dollar_format()) + theme_minimal() +
theme(axis.text.x=element_blank(),axis.ticks.x = element_blank(), axis.title.x = element_blank(),
axis.text.y=element_blank(),axis.ticks.y = element_blank(), axis.title.y = element_blank(),
strip.text = element_text(size = 12))
world<- map_data("world")
gapminder_df1 <- gapminder %>% filter(continent == "Americas") %>%
mutate(code = countrycode::countrycode(country,"country.name", "iso2c"))
world <- world %>%
mutate(code = countrycode::countrycode(region,"country.name", "iso2c"))
df1 <- left_join(world, gapminder_df1, by = "code")
df1 %>% filter(!is.na(gdpPercap), long < 0, year %in% c(1952, 2007)) %>%  ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
facet_wrap(~year, scales = "free")  +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1,  labels = scales::dollar_format()) + theme_minimal() +
theme(axis.text.x=element_blank(),axis.ticks.x = element_blank(), axis.title.x = element_blank(),
axis.text.y=element_blank(),axis.ticks.y = element_blank(), axis.title.y = element_blank(),
strip.text = element_text(size = 12))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey75") +
geom_nodes(color = "gold", size = 8) +
geom_nodetext(aes(label = LETTERS[ vertex.names ])) +
geom_edgetext(aes(label = day), color = "white", fill = "grey25") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank())
install.packages('ggnetwork')
suppressPackageStartupMessages(library(ggnetwork))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey75") +
geom_nodes(color = "gold", size = 8) +
geom_nodetext(aes(label = LETTERS[ vertex.names ])) +
geom_edgetext(aes(label = day), color = "white", fill = "grey25") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank())
suppressPackageStartupMessages(library(ggnetwork))
ggplot(n, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey75") +
geom_nodes(color = "gold", size = 8) +
geom_nodetext(aes(label = LETTERS[ vertex.names ])) +
geom_edgetext(aes(label = day), color = "white", fill = "grey25") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "grey25"),
panel.grid = element_blank())
head(ggnetwork(n))
head(ggnetwork
head(ggnetwork)
ggnetwork(n, layout = "fruchtermanreingold", cell.jitter = 0.75)
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, gdpPercap),color = "red") + geom_line() +  geom_point() +
labs(x = "Year", y = "Income per person") + theme_bw()
#gapminder %>% filter(year == 2007) %>% filter(gdpPercap > 10000)
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, gdpPercap)) + geom_line(color = "red") +  geom_point() +
labs(x = "Year", y = "Income per person") + theme_bw()
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, lifeExp)) + geom_line(color = "green") + geom_point() +
labs(x = "Year", y = "Life expectency") + theme_bw()
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, lifeExp)) + geom_line(color = "darkgreen") + geom_point() +
labs(x = "Year", y = "Life expectency") + theme_bw()
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, lifeExp)) + geom_line(color = "forestgreen") + geom_point() +
labs(x = "Year", y = "Life expectency") + theme_bw()
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, lifeExp)) + geom_line(color = "gold") + geom_point() +
labs(x = "Year", y = "Life expectency") + theme_bw()
gapminder %>% filter(country == "Kuwait") %>% ggplot(aes(year, lifeExp)) + geom_line(color = "gold2") + geom_point() +
labs(x = "Year", y = "Life expectency") + theme_bw()
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(fig.align = "center")
df7 %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("Life Expectency", palette="RdYlGn", direction = 1) +
theme_bw() + coord_polar(direction =  -1) + guides(fill = FALSE) + scale_x_continuous(breaks = c(-135,-45,45,135))  +
scale_y_continuous(breaks = seq(-90,90, by = 30)) + labs(x = "Longitude", y = "Latitude")
gapminder_df7 <- gapminder %>% filter(year == 2007) %>%
mutate(code = countrycode::countrycode(country,"country.name", "iso2c"))
df7 <- left_join(world, gapminder_df7, by = "code")
df7 %>%	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("GDP Per Capita", palette="RdYlGn", direction = 1, labels = scales::dollar_format()) +
labs(x = "Longitude", y = "Latitude") +
theme_void()
df7 %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("Life Expectency", palette="RdYlGn", direction = 1) +
theme_bw() + coord_polar(direction =  -1) + guides(fill = FALSE) + scale_x_continuous(breaks = c(-135,-45,45,135))  +
scale_y_continuous(breaks = seq(-90,90, by = 30)) + labs(x = "Longitude", y = "Latitude")
df7 %>% 	ggplot() + geom_polygon(aes(x = long, y = lat, group = group, fill = gdpPercap)) +
scale_fill_distiller("Life Expectency", palette="RdYlGn", direction = 1) +
theme_minimal() + coord_polar(direction =  -1) + guides(fill = FALSE) + scale_x_continuous(breaks = c(-135,-45,45,135))  +
scale_y_continuous(breaks = seq(-90,90, by = 30)) + labs(x = "Longitude", y = "Latitude")
